package br.edu.infnet.manutencao.AppManutencao.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import br.edu.infnet.manutencao.AppManutencao.model.negocio.Corretiva;
import br.edu.infnet.manutencao.AppManutencao.model.negocio.OrdemDeServico;
import br.edu.infnet.manutencao.AppManutencao.model.negocio.Preditiva;
import br.edu.infnet.manutencao.AppManutencao.model.negocio.Preventiva;
import br.edu.infnet.manutencao.AppManutencao.model.negocio.Solicitacao;
import br.edu.infnet.manutencao.AppManutencao.model.service.ClienteService;
import br.edu.infnet.manutencao.AppManutencao.model.service.SolicitacaoService;
import br.edu.infnet.manutencao.AppManutencao.viewmodel.CorretivaViewModel;
import br.edu.infnet.manutencao.AppManutencao.viewmodel.PreditivaViewModel;
import br.edu.infnet.manutencao.AppManutencao.viewmodel.PreventivaViewModel;

@Controller
public class SolicitacaoController {

	@Autowired
	private SolicitacaoService service;
	
	@Autowired
	private ClienteService serviceCliente;
		
	@RequestMapping(value = "/solicitacao", method = RequestMethod.GET)
	public String show(Model model) {

		model.addAttribute("clientes", serviceCliente.obterLista()); 	
		
		return  "ordemdeservico/novo";
	}	
	
	@RequestMapping(value = "/solicitacao", method = RequestMethod.POST)
	public String save(Model model,
			Solicitacao solicitacao) {
		
		System.out.println(solicitacao.getEquipe());
		System.out.println(solicitacao.getCliente().getId());	
		
		service.incluir(solicitacao);
		
		return  "redirect:solicitacao/" + solicitacao.getId() + "/detalhe";
	}
	
	@RequestMapping(value = "/solicitacao/{id}/detalhe", method = RequestMethod.GET)
	public String save(Model model,
			@PathVariable Integer id) {
		
		Solicitacao solicitacao = service.obterPorId(id);
		model.addAttribute("solicitacao", solicitacao); 
		
		return  "ordemdeservico/detalhe";
	}
	
	@RequestMapping(value = "/solicitacao/{id}/excluir", method = RequestMethod.GET)
	public String delete(Model model,
			@PathVariable Integer id) {

		service.excluir(id);		
		
		return  "redirect:/home";
	}
	
	@RequestMapping(value = "/solicitacao/{id}/corretiva", method = RequestMethod.GET)
	public String showCorretiva(
			Model model,
			@PathVariable Integer id) {
		
		Solicitacao solicitacao = service.obterPorId(id);
		model.addAttribute("solicitacao", solicitacao); 	
		
		return  "ordemdeservico/corretiva";
	}
	
	@RequestMapping(value = "/solicitacao/corretiva", method = RequestMethod.POST)
	public String postCorretiva(
			Model model,
			CorretivaViewModel corretiva) {
		
		Solicitacao _solicitacao = service.obterPorId(corretiva.getSolicitacaoId());		
		Corretiva _corretiva = new Corretiva();
		
		_corretiva.setSolicitacao(_solicitacao);	
		
		_corretiva.setData(corretiva.getData());
		_corretiva.setEngenheiro(corretiva.getEngenheiro());
		_corretiva.setTagEquipamento(corretiva.getTagEquipamento());
		_corretiva.setCodigoDoErro(corretiva.getCodigoDoErro());
		
		List<OrdemDeServico> ordens = new ArrayList<OrdemDeServico>();
		ordens.add(_corretiva);
		
		_solicitacao.setOrdensDeServico(ordens);
		
		service.incluir(_solicitacao);
		
		return "redirect:/solicitacao/" + _solicitacao.getId() + "/detalhe";
	}	
	
	
	@RequestMapping(value = "/solicitacao/{id}/preditiva", method = RequestMethod.GET)
	public String showPreditiva(
			Model model,
			@PathVariable Integer id) {
		
		Solicitacao solicitacao = service.obterPorId(id);
		model.addAttribute("solicitacao", solicitacao); 	
		
		return  "ordemdeservico/preditiva";
	}
	
	@RequestMapping(value = "/solicitacao/preditiva", method = RequestMethod.POST)
	public String postCorretiva(
			Model model,
			PreditivaViewModel preditiva) {
		
		Solicitacao _solicitacao = service.obterPorId(preditiva.getSolicitacaoId());		
		Preditiva _preditiva = new Preditiva();
		
		_preditiva.setSolicitacao(_solicitacao);
		
		_preditiva.setData(preditiva.getData());
		_preditiva.setEngenheiro(preditiva.getEngenheiro());
		_preditiva.setTagEquipamento(preditiva.getTagEquipamento());
		_preditiva.setAnaliseDeVibracao(preditiva.getAnaliseDeVibracao());
		_preditiva.setInspecaoVisual(preditiva.getInspecaoVisual());
		_preditiva.setUltrassom(preditiva.getUltrassom());
		
		List<OrdemDeServico> ordens = new ArrayList<OrdemDeServico>();
		ordens.add(_preditiva);
		
		_solicitacao.setOrdensDeServico(ordens);
		
		service.incluir(_solicitacao);
		
		return "redirect:/solicitacao/" + _solicitacao.getId() + "/detalhe";
	}
	
	
	@RequestMapping(value = "/solicitacao/{id}/preventiva", method = RequestMethod.GET)
	public String showPreventiva(
			Model model,
			@PathVariable Integer id) {
		
		Solicitacao solicitacao = service.obterPorId(id);
		model.addAttribute("solicitacao", solicitacao); 	
		
		return  "ordemdeservico/preventiva";
	}
	
	@RequestMapping(value = "/solicitacao/preventiva", method = RequestMethod.POST)
	public String postPreventiva(
			Model model,
			PreventivaViewModel preventiva) {
		
		Solicitacao _solicitacao = service.obterPorId(preventiva.getSolicitacaoId());		
		Preventiva _preventiva = new Preventiva();
		
		_preventiva.setSolicitacao(_solicitacao);
		
		_preventiva.setData(preventiva.getData());
		_preventiva.setEngenheiro(preventiva.getEngenheiro());
		_preventiva.setTagEquipamento(preventiva.getTagEquipamento());
		_preventiva.setTarefa(preventiva.getTarefa());
		
		
		List<OrdemDeServico> ordens = new ArrayList<OrdemDeServico>();
		ordens.add(_preventiva);
		
		_solicitacao.setOrdensDeServico(ordens);
		
		service.incluir(_solicitacao);
		
		return "redirect:/solicitacao/" + _solicitacao.getId() + "/detalhe";
	}	
}
